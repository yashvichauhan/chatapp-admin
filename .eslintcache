[{"D:\\Javascript\\demo-project\\chatapp-admin\\src\\index.js":"1","D:\\Javascript\\demo-project\\chatapp-admin\\src\\App.js":"2","D:\\Javascript\\demo-project\\chatapp-admin\\src\\reportWebVitals.js":"3","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\Login\\login.js":"4","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\admin.js":"5","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\reducerTypes.js":"6","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\index.js":"7","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\auth.js":"8","D:\\Javascript\\demo-project\\chatapp-admin\\src\\services\\firebase.js":"9","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\adminHome.js":"10","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Dashboard\\dashBoard.js":"11","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Users\\users.js":"12","D:\\Javascript\\demo-project\\chatapp-admin\\src\\lib\\js\\canvasjs.react.js":"13","D:\\Javascript\\demo-project\\chatapp-admin\\src\\lib\\js\\canvasjs.min.js":"14","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\useStyles.js":"15","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\uiActions.js":"16","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\analysis.js":"17","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\analysisReducer.js":"18","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Users\\EditProfile\\EditProfile.js":"19","D:\\Javascript\\demo-project\\chatapp-admin\\src\\axiosInstance\\axiosInstance.js":"20","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\store.js":"21"},{"size":1197,"mtime":1608031226528,"results":"22","hashOfConfig":"23"},{"size":549,"mtime":1608268734413,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":3362,"mtime":1608281180753,"results":"26","hashOfConfig":"23"},{"size":1099,"mtime":1608033342502,"results":"27","hashOfConfig":"23"},{"size":715,"mtime":1608112645332,"results":"28","hashOfConfig":"23"},{"size":297,"mtime":1608112661278,"results":"29","hashOfConfig":"23"},{"size":2233,"mtime":1608032218962,"results":"30","hashOfConfig":"23"},{"size":515,"mtime":1608025896100,"results":"31","hashOfConfig":"23"},{"size":3951,"mtime":1608299044495,"results":"32","hashOfConfig":"23"},{"size":2803,"mtime":1608282694944,"results":"33","hashOfConfig":"23"},{"size":8167,"mtime":1608100730122,"results":"34","hashOfConfig":"23"},{"size":2080,"mtime":1598311382000,"results":"35","hashOfConfig":"23"},{"size":479381,"mtime":1606455807148,"results":"36","hashOfConfig":"23"},{"size":201,"mtime":1607749989787,"results":"37","hashOfConfig":"23"},{"size":177,"mtime":1607750723332,"results":"38","hashOfConfig":"23"},{"size":7470,"mtime":1608294580379,"results":"39","hashOfConfig":"23"},{"size":1250,"mtime":1608115667325,"results":"40","hashOfConfig":"23"},{"size":4723,"mtime":1607942189948,"results":"41","hashOfConfig":"23"},{"size":199,"mtime":1608031989389,"results":"42","hashOfConfig":"23"},{"size":531,"mtime":1608031185820,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"zzh25q",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"D:\\Javascript\\demo-project\\chatapp-admin\\src\\index.js",["94","95","96","97","98","99","100"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux' ;\nimport {createStore, compose, combineReducers, applyMiddleware} from 'redux';\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport adminReducer from './Store/admin';\nimport analysisReducer from './Store/analysisReducer';\nimport App from './App';\nimport store from './Store/store';\n\n// const rootreducer=combineReducers({\n//   admin:adminReducer,\n//   analysis:analysisReducer\n// })\n\n// const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n// export const store = createStore(rootreducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["101","102"],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\App.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\reportWebVitals.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\Login\\login.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\admin.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\reducerTypes.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\index.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\auth.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\services\\firebase.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\adminHome.js",["103","104","105","106","107"],"import React,{useState,useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout, Menu,message } from 'antd';\r\nimport { LogoutOutlined, UserOutlined, AppstoreOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport cssClasses from './adminhome.module.css';\r\nimport * as actions from '../../Store/actions/index';\r\nimport Dashboard from './Dashboard/dashBoard';\r\nimport Users from './Users/users';\r\nimport useStyles from './useStyles.js';\r\n\r\nexport const AdminHome=(props)=>{\r\n    \r\n    const { Header, Content, Footer, Sider } = Layout\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        //onload\r\n        props.onFindTotalUsers()\r\n        .then((ub)=>{\r\n            console.log(\"FETCHED ALL USER DATA\");\r\n        })\r\n        .catch((err)=>{\r\n            message.error(\"Please check your internet connection!\");\r\n        })\r\n    },[props.refresh]);\r\n\r\n    useEffect(()=>{\r\n        return()=>{\r\n            //cleanup \r\n            //unsubscribeChat.then((fnc)=>fnc()).catch((err)=>console.log(err));\r\n        }\r\n    })\r\n    //utility functions\r\n    const logoutHandler=()=>{\r\n        props.onLogout()\r\n        .then(()=>{\r\n            console.log(\"Successfully logged out!\");\r\n            props.history.push('/');\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n            message.error(\"Logout Failed!\");\r\n        })\r\n    }\r\n    const dashboardHandler=()=>{\r\n        props.onsetSelected(\"db\");\r\n    }   \r\n    const usersHandler=()=>{\r\n        props.onsetSelected(\"us\");\r\n    }\r\n    return(\r\n        <Layout className={cssClasses.main_container} id=\"AdminHomeComponent\">\r\n        <Sider\r\n            breakpoint=\"lg\"\r\n            collapsedWidth=\"0\"\r\n            onBreakpoint={broken => {\r\n                console.log(broken);\r\n            }}\r\n            onCollapse={(collapsed, type) => {\r\n                console.log(collapsed, type);\r\n            }}\r\n        >\r\n        <div className={cssClasses.logo} style={{color:\"white\",padding:\"1em\",fontSize:\"20px\"}}>Chat App</div>\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<AppstoreOutlined  />}>\r\n                <a onClick={dashboardHandler}>Dashboard</a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n                <a onClick={usersHandler} >Users</a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<LogoutOutlined />}>\r\n                <a onClick={logoutHandler} >Logout</a>\r\n            </Menu.Item>\r\n        </Menu>\r\n        </Sider>\r\n        <Layout>\r\n        <Header className={cssClasses.site_layout_sub_header_background} style={{ paddingRight:'30px'  }}\r\n        >\r\n        <div className={cssClasses.flex_header}>\r\n            <Avatar alt=\"Admin\" className={classes.small} >Y</Avatar>\r\n        </div>\r\n        </Header>\r\n        <Content style={{ margin: '24px 16px 0' }} className={cssClasses.content} id=\"adminHomeContent\">\r\n            <div style={{ padding: 24}}>\r\n                {(props.selected ===\"us\")?<Users/>:null}\r\n                {(props.selected ===\"db\")?<Dashboard/>:null}\r\n            </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Admin Panel ©2020 Created by Yashvi chauhan</Footer>\r\n        </Layout>\r\n    </Layout>\r\n    );\r\n}\r\n\r\nAdminHome.propTypes={\r\n    selected: PropTypes.string,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      user: state.admin.currentAdmin,\r\n      selected:state.admin.selected,\r\n      refresh:state.admin.refresh\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onLogout:()=>dispatch(actions.authLogout()),\r\n        onsetSelected:(value)=>dispatch(actions.setSelected(value)),\r\n        onFindTotalUsers:()=>dispatch(actions.FindTotalUsers()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AdminHome);","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Dashboard\\dashBoard.js",["108","109"],"import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CanvasJSReact from '../../../lib/js/canvasjs.react';\r\nimport { Card, Col, Row} from 'antd';\r\n\r\nimport cssClasses from './dashboard.module.css'; \r\nimport * as actions from '../../../Store/actions/index';\r\n\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nexport const Dashboard=(props)=>{\r\n    const [onlineUser, setonlineUser] = useState(0);\r\n    const {CanvasJS} = CanvasJSReact.CanvasJS;\r\n    const {totalUserCount,userData,countryDataPoints} = props;\r\n    \r\n    useEffect(()=>{\r\n        getOnlineUsers();\r\n        props.onfindCountryDataPonts(userData);\r\n    },[userData]);\r\n\r\n    //utility functions\r\n    const getOnlineUsers=()=>{\r\n        let count=0;\r\n        if(userData){\r\n            userData.forEach(element => {\r\n                if(element.isOnline){\r\n                    count+=1;\r\n                }\r\n            });\r\n            setonlineUser(count);\r\n        }\r\n    }\r\n    \r\n    const options = {\r\n        exportEnabled: true,\r\n        animationEnabled: true,\r\n        title: {\r\n            text: \"Users by Country\"\r\n        },\r\n        data: [{\r\n            type: \"pie\",\r\n            startAngle: 75,\r\n            toolTipContent: \"<b>{label}</b>: {y}%\",\r\n            showInLegend: \"true\",\r\n            legendText: \"{label}\",\r\n            indexLabelFontSize: 16,\r\n            indexLabel: \"{label} - {y}%\",\r\n            dataPoints: countryDataPoints\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className={cssClasses.site_card_wrapper}>\r\n        <Row gutter={12}>\r\n            <Col span={7}>\r\n                <Card style={{ width: 200}} className={cssClasses.card_style}>\r\n                    <p style={{fontSize:'1.2em' ,color:\"gray\",marginBottom:0}}>Total Users</p>\r\n                    <p style={{fontSize:'2em',marginBottom:0}}>{totalUserCount}</p>\r\n                </Card>\r\n            </Col>\r\n            <Col span={7}>\r\n                <Card style={{ width: 200}} className={cssClasses.card_style}>\r\n                    <p style={{fontSize:'1.2em' ,color:\"gray\",marginBottom:0}}>Active Users</p>\r\n                    <p style={{fontSize:'2em',marginBottom:0}}>{onlineUser}</p>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <br/>\r\n        <CanvasJSChart options = {options}></CanvasJSChart>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        totalUserCount:state.analysis.totalUserCount,\r\n        userData:state.analysis.userData,\r\n        countryDataPoints:state.analysis.countryDataPoints\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        onfindCountryDataPonts:(users)=>dispatch(actions.findCountryDataPonts(users))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);","D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Users\\users.js",["110","111","112"],"import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Table, Space,Row,Col,Input,Menu, Dropdown, message,Select,Button } from 'antd';\r\nimport { DownOutlined,SyncOutlined } from '@ant-design/icons';\r\nimport countryList from \"react-select-country-list\";\r\nimport moment from 'moment';\r\n\r\nimport EditProfile from './EditProfile/EditProfile';\r\nimport * as actions from '../../../Store/actions/index';\r\nimport cssClasses from './users.module.css';\r\n\r\nfunction Dashboard(props){\r\n    const {userData,user,selectedUser,selectedUserMetadata} = props;\r\n    const { Search } = Input;\r\n    const [editProfileLoading, seteditProfileLoading] = useState(false);\r\n    const [editProfileVisible, setEditProfileVisible] = useState(false);\r\n    //utilityy functions\r\n    const onSearch=()=>{\r\n      console.log(\"Searching\");\r\n    }\r\n    const handleCancel = () => {\r\n      setEditProfileVisible(false);\r\n    };\r\n    const handleEditProfileSubmit=(values,file)=>{\r\n      seteditProfileLoading(true);\r\n      const sendData={\r\n        aboutme:(values.aboutme!==\"\")?values.aboutme:(selectedUser.aboutme),\r\n        country:(values.country!==undefined)?values.country:(selectedUser.country),\r\n        name:(values.name!==\"\")?values.name:(selectedUser.name),\r\n        email:(values.email!==\"\")?values.email:(selectedUser.email),\r\n        userID:selectedUser.userID,\r\n        avatarURL:selectedUser.avatar,\r\n      }\r\n      if(sendData.email===selectedUser.email){\r\n        sendData[\"emailFlag\"]=true;\r\n      }\r\n      props.oneditUserPersonalInfo(sendData,file)\r\n      .then((res)=>{\r\n        message.success(\"Editing operation success.\");\r\n        setEditProfileVisible(false);\r\n        seteditProfileLoading(false);\r\n      })\r\n      .catch((err)=>{\r\n        message.error(err);\r\n        seteditProfileLoading(false);\r\n      })\r\n    }\r\n    const setSelectedUser=(e,uid)=>{\r\n      e.preventDefault();\r\n      const value=userData.filter((userOne)=>userOne.userID===uid);\r\n      props.onsetSelectedUser(value[0],value[0].id);\r\n    }\r\n    const handleSuspendUser=()=>{\r\n      props.onsuspendUser(selectedUserMetadata.uid)\r\n      .then(()=>{\r\n        message.success(\"User suspended.\");\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n        message.error(\"Some error occurred.\");\r\n      })\r\n    }\r\n    const hanldeActivateUser=()=>{\r\n      props.onactivateUser(selectedUserMetadata.uid)\r\n      .then(()=>{\r\n        message.success(\"User account activated.\");\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n        message.error(\"Some error occurred.\");\r\n      })\r\n    }\r\n    const handleDeleteUser=(e)=>{\r\n      e.preventDefault();\r\n      props.ondeleteUser(selectedUser.userID,selectedUserMetadata.uid)\r\n      .then(()=>{\r\n        message.success(\"User has been Deleted permnently\");\r\n      })\r\n      .catch((err)=>{\r\n        message.error(\"Couldn't perform delete operation due to some error.\");\r\n      })\r\n    }\r\n    const handleReset=(clearFilters)=>{\r\n      clearFilters();\r\n    }\r\n    const handleOk=(confirm)=>{\r\n      confirm();\r\n    }\r\n    //menu\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item key=\"0\">\r\n          <div onClick={(e)=>handleDeleteUser(e)}>Delete</div>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"1\">\r\n          {(selectedUserMetadata)?(selectedUserMetadata.disabled)?<div onClick={hanldeActivateUser}>Activate User</div>\r\n          :<div onClick={handleSuspendUser}>Suspend User</div>:\r\n          <div onClick={handleSuspendUser}>Suspend User</div>\r\n        }\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\">\r\n            <div onClick={()=>setEditProfileVisible(true)}>Edit User data</div>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n          title: 'Online status',\r\n          dataIndex: 'isOnline',\r\n          filters:[\r\n            {\r\n              text:'Online',\r\n              value:true\r\n            },\r\n            {\r\n              text:'Offline',\r\n              value:false\r\n            }\r\n          ],\r\n          onFilter:(value,record)=>record.isOnline===value,\r\n          key: 'isOnline',\r\n          render: text => <p>{(text)?\"Online\":\"Offline\"}</p>,\r\n        },\r\n        {\r\n          title: 'Last active',\r\n          key: 'lastActive',\r\n          dataIndex: 'lastActive',\r\n          render: text => <p>{(text)?moment(text.toDate()).fromNow():\"No data\"}</p>,\r\n        },\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n          title: 'Country',\r\n          key: 'country',\r\n          dataIndex: 'country',\r\n          onFilter:(value,record)=>record.country===value,\r\n          filterDropdown:({ setSelectedKeys, selectedKeys, confirm, clearFilters })=>(\r\n          <div className={cssClasses.customized_filter}>\r\n            <Space size=\"middle\" direction=\"vertical\">\r\n              Country\r\n            <Select\r\n            showSearch\r\n            style={{ width: 150 }}\r\n            value={selectedKeys[0]}\r\n            onChange={(value) => setSelectedKeys(value ? [value] : [])}\r\n            placeholder=\"Select country to filter results.\"\r\n            options={countryList().getData()}>\r\n          </Select>\r\n          <Row>\r\n            <Col span={10} >\r\n            <Button type=\"primary\" size=\"small\" onClick={()=>handleReset(clearFilters)} >Reset</Button>\r\n            </Col>\r\n            <Col span={4} offset={8}>\r\n              <Button type=\"default\" size=\"small\" onClick={()=>handleOk(confirm)}>OK</Button>\r\n            </Col>\r\n          </Row>\r\n          </Space>\r\n          </div>\r\n          ),\r\n        },\r\n        {\r\n          title: 'About Me',\r\n          key: 'aboutme',\r\n          dataIndex: 'aboutme',\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: 'action',\r\n          dataIndex: 'userID',\r\n          render: (uid) => (\r\n            <Space size=\"middle\">\r\n              <Dropdown overlay={menu} trigger={['click']} key={uid}>\r\n                <a className=\"ant-dropdown-link\" onClick={e => setSelectedUser(e,uid)}>\r\n                    <DownOutlined />\r\n                </a>\r\n               </Dropdown>\r\n            </Space>\r\n          ),\r\n        },\r\n      ];\r\n      \r\n    return (\r\n        <>\r\n        <EditProfile\r\n            visible={editProfileVisible}\r\n            handleSubmit={handleEditProfileSubmit}\r\n            editLoading={editProfileLoading}\r\n            handleCancel={handleCancel}\r\n            userData={selectedUser}\r\n        >\r\n        </EditProfile>\r\n        <div className={cssClasses.row_styles} >\r\n        <Row justify=\"end\" >\r\n            <Col span={8} >\r\n                <Search \r\n                    placeholder=\"input search text\"\r\n                    allowClear \r\n                    onSearch={onSearch} \r\n                    enterButton\r\n                /> \r\n            </Col>\r\n            <Col span={2} offset={1}>\r\n                <SyncOutlined \r\n                  className={cssClasses.icon_styles}\r\n                  onClick={props.onchangeRefreshStatus}\r\n                >Sync\r\n                </SyncOutlined> \r\n            </Col>\r\n        </Row>\r\n        </div>\r\n        <Table columns={columns} dataSource={userData} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    userData:state.analysis.userData,\r\n    user:state.admin.currentAdmin,\r\n    selectedUser:state.analysis.selectedUser,\r\n    selectedUserMetadata:state.analysis.selectedUserMetadata\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    onsetSelectedUser:(userdata,uid)=>dispatch(actions.setSelectedUser(userdata,uid)),\r\n    oneditUserPersonalInfo:(values,file)=>dispatch(actions.editUserPersonalInfo(values,file)),\r\n    onchangeRefreshStatus:()=>dispatch(actions.changeRefreshStatus()),\r\n    onsuspendUser:(uid)=>dispatch(actions.suspendUser(uid)),\r\n    onactivateUser:(uid)=>dispatch(actions.activateUser(uid)),\r\n    ondeleteUser:(uid,id)=>dispatch(actions.deleteUser(uid,id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);","D:\\Javascript\\demo-project\\chatapp-admin\\src\\lib\\js\\canvasjs.react.js",["113"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","D:\\Javascript\\demo-project\\chatapp-admin\\src\\lib\\js\\canvasjs.min.js",[],["114","115"],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\useStyles.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\uiActions.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\actions\\analysis.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\analysisReducer.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Components\\AdminHome\\Users\\EditProfile\\EditProfile.js",["116","117","118","119"],"import React, {useState} from \"react\";\r\n\r\nimport {Modal, Button, Row, Col, Form, Input, Avatar, Upload, message,Select} from 'antd';\r\nimport {MailOutlined, UploadOutlined, UserOutlined,SmileOutlined } from \"@ant-design/icons\";\r\nimport countryList from \"react-select-country-list\";\r\n\r\nconst EditProfile = (props) => {\r\n  const [editProf] = Form.useForm();\r\n  const [ file, setFile ] = useState(null);\r\n  const [ prevURL, setPrevURL ] = useState(null);\r\n  \r\n  const onFinish = (values) => {\r\n    props.handleSubmit(values, file);\r\n    editProf.resetFields();\r\n    setPrevURL(null);\r\n  }\r\n\r\n  const onFinishFailed = () => {\r\n    message.error(\"Editing operation failed try again.\");\r\n  }\r\n\r\n  const onCancelModal=()=>{\r\n    editProf.resetFields();\r\n    setPrevURL(null);\r\n    props.handleCancel();\r\n  }\r\n\r\n  const handleFileChange = ({ fileList }) => {\r\n    if(fileList[fileList.length -1] && fileList[fileList.length -1].originFileObj) {\r\n      const fileType = fileList[fileList.length-1].type;\r\n      const fileSize = fileList[fileList.length-1].size / 1024 / 1024 < 1;\r\n      if((fileType === 'image/jpeg' || fileType === 'image/jpg' || fileType === 'image/png') && fileSize) {\r\n        const file = fileList[fileList.length-1].originFileObj;\r\n        let reader = new FileReader();\r\n        let url = reader.readAsDataURL(file);\r\n        reader.onloadend = (e) => {\r\n          setPrevURL(reader.result);\r\n        };\r\n        setFile(fileList[fileList.length-1].originFileObj);\r\n      }\r\n    }else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const beforeUpload = (file) => {\r\n    if(file.type !== 'image/png' && file.type !== 'image/jpg' && file.type !== 'image/jpeg') {\r\n      message.error(`${file.name} file type is not supported.`);\r\n    }\r\n    const isLimit1MB = file.size / 1024 / 1024 < 1;\r\n    if (!isLimit1MB) {\r\n      message.error('Image must smaller than 1MB');\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Edit User Data\"\r\n        visible={props.visible}\r\n        okButtonProps={{\r\n          form: \"basic\",\r\n          key: 'submit',\r\n          htmlType: 'submit'\r\n        }}\r\n        confirmLoading={props.editLoading}\r\n        onCancel={onCancelModal}\r\n      >\r\n        <Row type={\"flex\"} justify={\"center\"} align={\"center\"}>\r\n          <Col span={16}>\r\n            <Form \r\n                  form={editProf}\r\n                  name={\"basic\"}\r\n                  id={\"basic\"}\r\n                  preserve={false}\r\n                  onFinish={onFinish}\r\n                  onFinishFailed={onFinishFailed}\r\n            >\r\n              <Row type={\"flex\"} justify={\"center\"} align={\"center\"}>\r\n                <Col>\r\n                  <Form.Item>\r\n                    <Avatar src={prevURL} size={85}></Avatar>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row type={\"flex\"} justify={\"center\"} align={\"center\"}>\r\n                <Col>\r\n                  <Form.Item>\r\n                    <Upload\r\n                      showUploadList={false}\r\n                      name={\"avatar\"}\r\n                      accept={'.jpg, .jpeg, .png'}\r\n                      beforeUpload={beforeUpload}\r\n                      onChange={handleFileChange}\r\n                    >\r\n                      <Button type={\"primary\"} size={\"middle\"} shape={\"round\"} icon={<UploadOutlined />}>Upload Image</Button>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Form.Item\r\n                label={\"Name\"}\r\n                initialValue=\"\"\r\n                name={\"name\"}\r\n              >\r\n                <Input placeholder={'Name'} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label={\"About Me\"}\r\n                initialValue=\"\"\r\n                name={\"aboutme\"}\r\n              >\r\n                <Input maxLength={100} placeholder={'About Me'} />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label={\"Country\"}\r\n                name={\"country\"}\r\n                >\r\n                <Select\r\n                  showSearch\r\n                  placeholder=\"Select your country\"\r\n                  options={countryList().getData()}>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                initialValue=\"\"\r\n                label={\"Email\"}\r\n                name={\"email\"}\r\n                hasFeedback\r\n                rules={[{\r\n                  type: 'email',\r\n                }]}\r\n              >\r\n                <Input placeholder={\"Email\"} />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;","D:\\Javascript\\demo-project\\chatapp-admin\\src\\axiosInstance\\axiosInstance.js",[],"D:\\Javascript\\demo-project\\chatapp-admin\\src\\Store\\store.js",[],{"ruleId":"120","severity":1,"message":"121","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},{"ruleId":"120","severity":1,"message":"124","line":4,"column":22,"nodeType":"122","messageId":"123","endLine":4,"endColumn":29},{"ruleId":"120","severity":1,"message":"125","line":4,"column":31,"nodeType":"122","messageId":"123","endLine":4,"endColumn":46},{"ruleId":"120","severity":1,"message":"126","line":4,"column":48,"nodeType":"122","messageId":"123","endLine":4,"endColumn":63},{"ruleId":"120","severity":1,"message":"127","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"128","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":20},{"ruleId":"120","severity":1,"message":"129","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":23},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"120","severity":1,"message":"134","line":1,"column":15,"nodeType":"122","messageId":"123","endLine":1,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":28,"column":7,"nodeType":"137","endLine":28,"endColumn":22,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":69,"column":17,"nodeType":"141","endLine":69,"endColumn":47},{"ruleId":"139","severity":1,"message":"140","line":72,"column":17,"nodeType":"141","endLine":72,"endColumn":44},{"ruleId":"139","severity":1,"message":"140","line":75,"column":17,"nodeType":"141","endLine":75,"endColumn":45},{"ruleId":"120","severity":1,"message":"142","line":13,"column":12,"nodeType":"122","messageId":"123","endLine":13,"endColumn":20},{"ruleId":"135","severity":1,"message":"143","line":19,"column":7,"nodeType":"137","endLine":19,"endColumn":17,"suggestions":"144"},{"ruleId":"120","severity":1,"message":"145","line":13,"column":21,"nodeType":"122","messageId":"123","endLine":13,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":111,"column":27,"nodeType":"141","endLine":111,"endColumn":30},{"ruleId":"139","severity":1,"message":"140","line":182,"column":17,"nodeType":"141","endLine":182,"endColumn":88},{"ruleId":"146","severity":1,"message":"147","line":1,"column":1,"nodeType":"148","messageId":"149","fix":"150"},{"ruleId":"130","replacedBy":"151"},{"ruleId":"132","replacedBy":"152"},{"ruleId":"120","severity":1,"message":"153","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"120","severity":1,"message":"154","line":4,"column":39,"nodeType":"122","messageId":"123","endLine":4,"endColumn":51},{"ruleId":"120","severity":1,"message":"155","line":4,"column":52,"nodeType":"122","messageId":"123","endLine":4,"endColumn":65},{"ruleId":"120","severity":1,"message":"156","line":35,"column":13,"nodeType":"122","messageId":"123","endLine":35,"endColumn":16},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'combineReducers' is defined but never used.","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","'adminReducer' is defined but never used.","'analysisReducer' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["159"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CanvasJS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOnlineUsers' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["160"],"'user' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"161","text":"162"},["157"],["158"],"'MailOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},[-1,0],"","Update the dependencies array to be: [props, props.refresh]",{"range":"167","text":"168"},"Update the dependencies array to be: [getOnlineUsers, props, userData]",{"range":"169","text":"170"},[943,958],"[props, props.refresh]",[664,674],"[getOnlineUsers, props, userData]"]